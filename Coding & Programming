#Will use the pandas module in Python.
import pandas as pd

#We give data for 4 of our attributes ('attractions' isn't an attribute) into a nested list along 
#with our attractions.
data = {
    #location': ['Atlanta Downtown','Blue Ridge Region','Suburban Atlanta','Expansive Georgia']
    
  'location': ['Atlanta Downtown','Expansive Georgia','Atlanta Downtown','Expansive Georgia','Blue Ridge Region',
               'Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Blue Ridge Region','Atlanta Downtown',
               'Expansive Georgia','Atlanta Downtown','Suburban Atlanta','Atlanta Downtown','Atlanta Downtown',
               'Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Atlanta Downtown',
               'Atlanta Downtown','Atlanta Downtown','Suburban Atlanta','Suburban Atlanta','Atlanta Downtown',
               'Atlanta Downtown','Atlanta Downtown','Suburban Atlanta','Atlanta Downtown','Atlanta Downtown',
               'Suburban Atlanta','Suburban Atlanta','Suburban Atlanta','Suburban Atlanta','Atlanta Downtown',
               'Suburban Atlanta','Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Blue Ridge Region',
               'Suburban Atlanta','Expansive Georgia','Expansive Georgia','Blue Ridge Region','Atlanta Downtown',
               'Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Atlanta Downtown','Expansive Georgia'],
      
   #'attractions': ['listing of 50 attractions'],
    
  'attractions': ['Georgia Aquarium','Jekyll Island','Stone Mountain Park','Okefenokee Swamp',
                  'Amicalola Falls State Park','World of Coca-Cola','Zoo Atlanta','Piedmont Park',
                  'Tallulah Gorge State Park','Arabia Mountain Top Trail','Tybee Island','Mercedes-Benz Stadium',
                  'Six Flags GA','CNN Center','Lenox Park','Fox Theatre','MLK National Historic Site',
                  'Sun Dial Observation Level','High Museum of Art','Juniper Cafe','Maggiano"s Little Italy',
                  'Eight Sushi Lounge','Piastra Restaurant','Antico Pizza Napoletana','TABLA','Vatica Indian Cuisine',
                  'Atlanta Breakfast Club','Broadway Diner','Lenox Square','Ponce City Market','Southlake Mall',
                  'Mall of Georgia','North Point Mall','Perimeter Mall','Atlantic Station','North GA Premium Outlets',
                  'Phipps Plaza','Buckhead Village District','Atlanta Botanical Garden','Appalachian Trail',
                  'Callaway Gardens','Fort Pulaski National Monument','Savannah Historic District','Brasstown Bald',
                  'Delta Flight Museum','Skyline Park','State Farm Arena','David J. Sencer CDC Museum',
                  'Georgia Capitol Museum','Athens'],
    
  #'amenities': ['Internet','Parking','Food','Entertainment'],
    
  'amenities': ['Entertainment','Parking','Parking','Entertainment','Parking','Entertainment','Entertainment',
                'Parking','Parking','Entertainment','Parking','Entertainment','Entertainment','Entertainment',
                'Entertainment','Entertainment','Parking','Food','Entertainment','Food','Food','Food','Food','Food',
                'Food','Food','Food','Food','Entertainment','Food','Entertainment','Entertainment','Entertainment',
                'Entertainment','Entertainment','Entertainment','Entertainment','Entertainment','Parking','Parking',
                'Internet','Parking','Entertainment','Parking','Entertainment','Entertainment','Entertainment',
                'Entertainment','Entertainment','Entertainment'],
    
  #'health': ['Safe','Not Safe'],
    
  'health': ['Safe','Safe','Safe','Safe','Safe','Safe','Not Safe','Safe','Safe','Safe','Safe','Safe','Not Safe',
             'Safe','Safe','Safe','Safe','Safe','Safe','Safe','Not Safe','Safe','Safe','Safe','Not Safe','Safe',
             'Safe','Safe','Not Safe','Safe','Not Safe','Not Safe','Not Safe','Safe','Safe','Not Safe','Not Safe',
             'Safe','Safe','Safe','Safe','Safe','Safe','Safe','Safe','Not Safe','Safe','Safe','Safe','Safe'], 
    
    
  #'rating': ['1','2','3','4','5']
  #1 is the lowest rating possible while 5 is the highest rating possible.
    
  'rating': ['5','5','5','4','5','4','4','5','5','5','4','4','3','4','4','4','5','5','4','5','4','5','4','4','5','4',
             '5','4','4','4','3','5','4','4','3','4','4','5','5','5','4','5','5','5','4','4','4','5','4','4']  
}


#Load data (define attraction types) into a DataFrame object:
#(data,index=[Integers 1-50])

df = pd.DataFrame(data,index=['1-things to do','2-tourist attractions','3-tourist attractions','4-tourist attractions',
                              '5-tourist attractions','6-tourist attractions','7-things to do','8-tourist attractions',
                              '9-tourist attractions','10-things to do','11-tourist attractions','12-things to do',
                              '13-things to do','14-tourist attractions','15-tourist attractions','16-things to do',
                              '17-things to do','18-restaurants','19-tourist attractions','20-restaurants',
                              '21-restaurants','22-restaurants','23-restaurants','24-restaurants','25-restaurants',
                              '26-restaurants','27-restaurants','28-restaurants','29-shopping','30-restaurants',
                              '31-shopping','32-shopping','33-shopping','34-shopping','35-shopping','36-shopping',
                              '37-shopping','38-things to do','39-things to do','40-things to do','41-things to do',
                              '42-tourist attractions','43-things to do','44-things to do','45-things to do',
                              '46-things to do','47-things to do','48-things to do','49-tourist attractions',
                              '50-tourist attractions'])
                              
#print 'df' DataFrame object to call it for users.
print(df)

#Define the search() function.
def search():
    print(['1-things to do','2-tourist attractions','3-tourist attractions','4-tourist attractions',
                              '5-tourist attractions','6-tourist attractions','7-things to do','8-tourist attractions',
                              '9-tourist attractions','10-things to do','11-tourist attractions','12-things to do',
                              '13-things to do','14-tourist attractions','15-tourist attractions','16-things to do',
                              '17-things to do','18-restaurants','19-tourist attractions','20-restaurants',
                              '21-restaurants','22-restaurants','23-restaurants','24-restaurants','25-restaurants',
                              '26-restaurants','27-restaurants','28-restaurants','29-shopping','30-restaurants',
                              '31-shopping','32-shopping','33-shopping','34-shopping','35-shopping','36-shopping',
                              '37-shopping','38-things to do','39-things to do','40-things to do','41-things to do',
                              '42-tourist attractions','43-things to do','44-things to do','45-things to do',
                              '46-things to do','47-things to do','48-things to do','49-tourist attractions',
                              '50-tourist attractions'])
    at=input("Enter attraction type 1-50: ")
    print(df.loc[at])
    print('"location","attractions","amenities","health","rating"]"')
    at2=input("Enter your desired attribute (attraction name): ")
    print("-----------------------------------------------------------------------")
    if(at2=="location"):
        print(df.loc[at][0])
    elif(at2=="attractions"):
        print(df.loc[at][1])
    elif(at2=="amenities"):
        print(df.loc[at][2])
    elif(at2=="health"):
        print(df.loc[at][3])
    elif(at2=="rating"):
        print(df.loc[at][4])
        
#Call the search() function.                          
search()
